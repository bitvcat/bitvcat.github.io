<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tcp/Ip on Domi●Cat</title>
    <link>http://shuimu98.gitHub.io/tags/tcp/ip/</link>
    <description>Recent content in Tcp/Ip on Domi●Cat</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 24 Mar 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://shuimu98.gitHub.io/tags/tcp/ip/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>TCP/IP协议族详解（六）</title>
      <link>http://shuimu98.gitHub.io/2018-03-24/tcp/ip%E5%8D%8F%E8%AE%AE%E6%97%8F%E8%AF%A6%E8%A7%A3%E5%85%AD/</link>
      <pubDate>Sat, 24 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>http://shuimu98.gitHub.io/2018-03-24/tcp/ip%E5%8D%8F%E8%AE%AE%E6%97%8F%E8%AF%A6%E8%A7%A3%E5%85%AD/</guid>
      <description> 本系列文章是教程：TCP、IP协议族详解的学习笔记。
该系列大概分为下面几个部分：
 1、TCP/IP协议4层结构以及每层的作用 2、IP协议详解 3、ARP协议和RARP协议详解 4、ICMP协议详解 5、TCP协议详解 6、UDP协议详解  本文主要介绍TCP/IP网络体系中网络层的UDP协议。
1、UDP协议详解 它是与TCP协议相对的，它有两个特点：
 无连接 不可靠  TCP像一个细心的小女子，UDP像一个糙汉子。
UDP协议的功能： - 创建进程到进程间的通信（由端口号完成） - 有限的差错控制，出现差错悄悄丢弃报文分组
2、UDP首部格式 UDP数据包报包含两个部分：UDP首部+数据
UDP首部非常简单，占8个byte，下面是一个UDP报文的抓包结果： 字段解释：
 第1、2字节：源端口 第3、4字节：目的端口 第5、6字节：报文长度，包括头部+数据，例如上图Length:664，单位为字节，即：Data(656+8首部)= 664byte 第7、8字节：校验和，同理TCP  3、应用层 最后，顺便提一下应用层常用的协议，以及它们所使用的传输层协议：
 网页浏览
 HTTP，使用TCP协议，端口80 SSL，建立在http基础上，端口443  文件传输
 FTP，使用TCP协议，端口为20、21 TFTP，使用UDP，传送小文件  E-Mail
 SMTP，使用TCP，端口25 POP3，使用TCP，端口110  远程登录
 Telnet，使用TCP，端口23 SSH，使用TCP，端口22  域名服务（DNS），使用UDP协议，端口53
 网络管理（SNMP），使用UDP协议，端口161、162
  </description>
    </item>
    
    <item>
      <title>TCP/IP协议族详解（五）</title>
      <link>http://shuimu98.gitHub.io/2018-03-23/tcp/ip%E5%8D%8F%E8%AE%AE%E6%97%8F%E8%AF%A6%E8%A7%A3%E4%BA%94/</link>
      <pubDate>Fri, 23 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>http://shuimu98.gitHub.io/2018-03-23/tcp/ip%E5%8D%8F%E8%AE%AE%E6%97%8F%E8%AF%A6%E8%A7%A3%E4%BA%94/</guid>
      <description>本系列文章是教程：TCP、IP协议族详解的学习笔记。
该系列大概分为下面几个部分：
 1、TCP/IP协议4层结构以及每层的作用 2、IP协议详解 3、ARP协议和RARP协议详解 4、ICMP协议详解 5、TCP协议详解 6、UDP协议详解  本文主要介绍TCP/IP网络体系中网络层的TCP协议。另外推荐一篇文章，写得很不错。
在介绍TCP协议之前，让我们先了解一下传输层。
1、网络层与传输层关系 先举一个生活中的例子，假如我在京东上购买了一个物品，发货方为上海的某个商家，收货方就是我的公司地址，比如说是：双击省老铁市666区没毛病软件园A座。但是A座这栋楼很大，快递员不知道我具体在哪一层哪个室，这里就需要一个门牌号，比如说666号。
那么，套路上面的例子，双击省老铁市666区没毛病软件园A座这个地址就类似IP地址，它工作于网络层，它能定位到一块具体的位置，也是就A座这台电脑，在A座这栋楼里面的各个公司就是计算机中的各个进程，每个公司（进程）都占有一个门牌号，这个门牌号就是端口号，端口号这个概念就属于传输层。
两台主机间通信条件：
 本地主机 IP 远程主机 IP  两台主机进程间通信条件：
 本地主机 IP 本地进程 端口 远程主机 IP 远程进程 端口  因此，可以简单的理解：网络层（这里指IP协议）提供主机之间的逻辑通信，传输层（这里指TCP或者UDP协议）提供提供进程之间的逻辑通信。
2、传输层协议详解 传输层功能  分段及封装应用层送来的数据
例如：我们运送水果，不可能一个一个的运送，一般都是将大堆苹果装车后一车一车的运送，每一车装多少个就是分段数据，装车后要用布封起来保鲜就是封装数据
 提供端到端的传输服务
即源主机端口到目的主机端口进行通信
 在发送主机与接收主机之间构建逻辑通信
如果源主机分别开启Telnet、http访问远程主机的telnet服务和http服务，那么传输层就提供这样一个机制，它构建了两个对应的逻辑通道。
  关于端口 端口的范围
端口的大小目前是2个byte，也就是说最大有65536个端口，在0~65535这个范围内，我们又把它分成三个部分：
 熟知端口(著名端口)：0-1023，由ICANN指派和控制（例如：80端口、22端口等） 注册端口：1024-49151,IANA不指派也不控制，但须注册（例如：3306端口，即mysql端口） 动态端口(短暂端口)：49152-65535，IANA不指派也不控制，无须注册，可以分配给你自己的应用  3、TCP协议详解 核心：TCP协议负责将数据分段成TCP报文段(每一段报文作为传递给IP层的数据)、重组TCP报文段将数据还原。
TCP协议的特点  面向连接：通讯双方交换数据之前必须要先建立连接 可靠性：提供了多种确保可靠性的机制 字节流服务：8bit（1byte）为最小单位构成的字节流（所以不存在粘包的概念）  套接字 套接字（socket）它是ip地址和端口号的一个组合（例如：192.168.2.172:80），它是TCP连接的最基本的、抽象化的一个对象，也就是TCP连接的端点，一个TCP连接有两个端点。
TCP数据传输过程 在底层的实现中，TCP发送端和接收端都有对应的缓存，分别是发送缓存、接收缓存，应用层传递给传输层的数据并不一定立即就发送出去了，而是先放入缓存中，然后等待最合适的时机（网络通畅、对端用空闲等等）再把数据发送出去。同理，接收端也是一样的道理。
另外，需要注意，传输层在向IP层传递数据是，是以分组为单位的，而不是按整个字节流来发送，TCP协议把若干字节构成一个分组后，再投递给IP层，这种的分组就称为报文段（Segment），因此，我们常常说TCP报文段就是这样来的。
举例来说：我去菜市场买了一根很长的黄瓜（现在的黄瓜怎么都长那么长- -），太长不好切，那就先把黄瓜切成一段一段的，然后再对每一段切片。这个切成一段的过程就类似TCP数据分段，分段后再交给IP层。</description>
    </item>
    
    <item>
      <title>TCP/IP协议族详解（一）</title>
      <link>http://shuimu98.gitHub.io/2018-03-22/tcp/ip%E5%8D%8F%E8%AE%AE%E6%97%8F%E8%AF%A6%E8%A7%A3%E4%B8%80/</link>
      <pubDate>Thu, 22 Mar 2018 14:21:00 +0800</pubDate>
      
      <guid>http://shuimu98.gitHub.io/2018-03-22/tcp/ip%E5%8D%8F%E8%AE%AE%E6%97%8F%E8%AF%A6%E8%A7%A3%E4%B8%80/</guid>
      <description>写在最前面：大学时，自己所学的专业就是网络工程，奈何自己对这方面兴趣不大，一心想要开发游戏，所以学的也是乱七八糟，谁曾想，毕业后真的入了游戏这一行，而且还是服务器，网络方便的知识多少还是要掌握一下，遂依照网易云课堂上的教程又重新复习了一遍TCP/IP结构。
本系列文章是教程：TCP、IP协议族详解的学习笔记。
该系列大概分为下面几个部分：
 1、TCP/IP协议4层结构以及每层的作用 2、IP协议详解 3、ARP协议和RARP协议详解 4、ICMP协议详解 5、TCP协议详解 6、UDP协议详解  本文主要介绍TCP/IP网络体系四层结构，以及每层的作用。
在介绍TCP/IP四层结构之前，先介绍一下OSI七层参考模型。
1、ISO/OSI 英文全称为Open Systems Interconnection Reference Model(开放式通信系统互联参考模型)，它是国际标准化组织ISO(International Organization for Standardization)提出的一个框架，注意的是，OSI只是一个参考模型，现在的厂商并不是完全按照这个标准，而是参考了这个标准，所以才有现在比较常用的TCP/IP四层网络体系结构，它简化了OSI模型。
7层模型的功能 OSI标准分为7层，从下往上分别是：物理层、数据链路层、网络层、传输层、会话层、表示层、应用层，同时规定了这个7层结构需要遵循的一些准则。见下图： 下面介绍下OSI七层模型每层的作用：
 应用层：是应用程序访问网络服务的窗口，提供应用程序运行的环境、负责管理和执行应用程序，它是直接面向应用程序的 表示层：确定计算机之间交换数据的格式，为数据在传输之前，对加密、解密、压缩、解压缩以及终端数据格式提供一套规则和约定（它不对数据做操作，只是提供一套规则） 会话层：允许不同计算机上的两个应用程序建立、使用和结束会话，对对话的双方进行资格审查和验证的规则，同时规定发送时的单双工模式，用来使不同应用程序的数据与其他应用程序的数据保持隔离 传输层：确保报文无差错、有序、不丢失、无重复的传输，它主要负责分割与重组数据、按端口号寻址、连接管理、差错控制和流量控制
传输层在7层体系中起到了一个承上启下的作用，它相当于一个纽带，连接上面三层（偏软件）与下面三层（偏硬件），它是七层中最重要、最关键的一层。它传输的数据称为数据段（Segment）
 网络层：负责信息寻址（IP协议）和将逻辑地址和名字转换为物理地址（ARP协议），负责建立、保持、终止通过中间设备的连接，同时负责通讯子网内路径选择和拥挤控制，它传输的数据称为数据包（Packet）
 数据链路层：负责从网络层向物理层发送数据帧，它将数据组装成帧，处理数据在传输过程中出现的差错，调节发送速率，它传输的数据称为数据帧（Frame）
 物理层：发送和接收比特流
  注意要区别点到点和端到端这两个概念： - 点到点，是物理层面的概念，比如上图中，两个中间结点就是点到点的连接 - 端到端，是逻辑层面的概念，可以理解是设备A的某个端口与远程设备B的某个端口的连接
7层模型的使用 加入计算机A通过一个进程向计算机B发送数据，那么发送的数据每经过一层（发送方从上到下），就会在数据的头部加上该层的头部，到达计算机B后，每过一层（从下到上），又减去该层头部，最后计算机B收到A发送的原始数据。
注意：数据链路层，除了会加上头部，还会在数据末尾加上尾部，而其他层，只会加上头部。
2、TCP/IP四层结构 因为OSI七层参考模型也有缺点，比如开发成本大、功能重叠，实现复杂等，所以TCP/IP协议体系在OSI的基础上做了一些简化，它分为四层，从上到下分别为：应用层、传输层、网络层、网络接口层（或者叫数据链路层）。 它与OSI七层模型的对应关系如下图： 另外，TCP/IP协议实际上包含了大量的协议和应用，并且由多个独立定义的协议组合在一起，因此说，TCP/IP是一个协议族而不是一种协议。
TCP/IP协议族主要协议  应用层：各种服务及应用程序通过该层利用网络。常用协议：HTTP（基于TCP）、FTP(文件传输，基于TCP)、SMTP、TELNET(终端仿真,基于TCP)、DNS(域名解析)等。 传输层：确认数据传输及进行纠错处理，常用协议：TCP、UDP。 网络层：负责数据的传输，路径及地址选择。常用协议：IP、ICMP(互联网控制消息协议)、ARP(地址解析协议)、RARP(反向地址解析协议，已不常用)。 网络接口层：是针对不同物理网络的连接形式的协议。例如：Ethernet(以太网，目前最常用的局域网中使用网络接口层协议)、FDDI、ATM、PPP(点对点协议，广域网)。  每层对应的主要协议： 网络接口层 这里顺便介绍一下网络接口层（数据链路层），因为我主要想学习的并非偏硬件层的知识，所以，也不作过多的学习和研究。
在早期，IEEE 802委员会（1980年2月，所以称为802委员会）将局域网的数据链路层拆分了两个子层：
 MAC子层（Media Access Control），介质访问控制 LLC子层（Logical Link Control），逻辑链路控制  现在已经不再使用了，取而代之的是以太网（Ethernet）。</description>
    </item>
    
    <item>
      <title>TCP/IP协议族详解（三）</title>
      <link>http://shuimu98.gitHub.io/2018-03-22/tcp/ip%E5%8D%8F%E8%AE%AE%E6%97%8F%E8%AF%A6%E8%A7%A3%E4%B8%89/</link>
      <pubDate>Thu, 22 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>http://shuimu98.gitHub.io/2018-03-22/tcp/ip%E5%8D%8F%E8%AE%AE%E6%97%8F%E8%AF%A6%E8%A7%A3%E4%B8%89/</guid>
      <description>本系列文章是教程：TCP、IP协议族详解的学习笔记。
该系列大概分为下面几个部分：
 1、TCP/IP协议4层结构以及每层的作用 2、IP协议详解 3、ARP协议和RARP协议详解 4、ICMP协议详解 5、TCP协议详解 6、UDP协议详解  本文主要介绍TCP/IP网络体系中网络层的ARP协议。
1、IP地址和MAC地址 一般，我们知道网络中的计算机，会有ip地址和mac地址（物理地址），那么这两个地址有什么区别和联系？
逻辑地址（IP地址）：它工作在网络层，全局唯一（全球范围内，公网IP地址是唯一的），用软件实现。
物理地址（MAC地址）：它工作在网络接口层，本地范围唯一（同一个通讯子网内，可以均指以太网），用硬件实现(路由器，计算机bios芯片)，一般为48位，一般在设备出厂是，就已经将Mac地址烧录进入了设备中。
简单说就是一个在子网里面，MAC地址可以在这个子网络里面定位到不同的网络设备，IP地址可以在整个因特网中定位到不同的子网。
注：MAC地址长度为6byte（48bit），前24位为厂家代码，后24位为序列号，例如我现在的mac地址为：FC-AA-14-95-BC-xx，可以通过Mac地址查询网址，知道我的网卡生产厂商为：GIGA-BYTE TECHNOLOGY CO.,LTD，也就是技嘉主板，因为网卡直接集成在了主板中。
2、IP协议和ARP协议的关系 首先，我们想象这样一个生活中的场景，在新生入学时，一堆学生分配到一个教室，大家彼此不知道名字（无重名），但是每个人都有座位号，此时，如果学生A想要和学生B交流，A知道B的座位号（假如为10号），但是他不知道B的名字，那么A就开始大喊：“我是A，我坐在2号，座位号为10号的同学，你叫什么名字？”，然后B听到后，发现找的就是我，就回复A说：“我是B，我坐在10号”，后面，两人都知道名字后，就成为了好基友。
套用上面的例子，可以把这个教室认为是一个通讯子网，把座位号认为是IP地址（座位号是可以随意变动的），把名字认为是MAC地址（名字在这个教室内是唯一的），如果通过座位号找到名字，就是ARP协议负责的内容。
也就是说，ARP协议可以动态地在三层IP地址和二层MAC地址之间建立一种映射关系，用来获取目标IP地址所对应的MAC地址的。如果所要找的主机和源主机不在同一个局域网上，那么就要通过ARP 找到一个位于本局域网上的某个路由器的硬件地址，然后把分组发送给这个路由器，让这个路由器分组转发给下一个网络。剩下的工作就由下一个网络来做。
因为ARP是为IP协议提供服务的，所以，把ARP划分到了网络层。
因此，IP协议与ARP协议的关系就是，ARP是为IP协议提供服务，他比IP协议要稍微低一个层次。
3、为什么有了IP地址还要使用Mac地址？  IP地址容易修改和变动，不能在网络上固定标示一台设备 Mac地址一般在出厂时被烧录到硬件中，不易修改，能在局域网中定位唯一一台设备 从拓扑结构和分层上分析，IP地址属于网络层，主要功能是在广域网范围内路由寻址，选择最佳路由，而Mac地址是网络接口层要形成适合于在网络媒体上传输的数据帧。  4、ARP头部结构 下图为ARP协议头部格式（分组格式，28字节的ARP请求/应答）： 同IP协议一样，我依然结合抓包来解释每个字段的意义。
1、使用wireshark抓一对(请求和应答)ARP包，本机IP地址为：192.168.2.103，虚拟机IP地址为：192.168.2.172，结果如下图所示 可以看到后面的二进制数据，这就是ARP协议报文的首部，一共28个字节。 2、详细解释每个字段的意义
 第1、2个字节（2byte）：值为0001，表示硬件类型为以太网，如图所示：Hardware Type: Ethernet(1) 第3、4个字节（2byte）：值为0800，表示协议类型为IPV4，如图所示：Protocol Type: IPV4(0x0800) 第5个字节：值为06，表示Mac地址长度，也就是6byte（单位为字节），如图所示：Hardware Size:6 第6个字节：值为04，表示IP地址长度，也就是4字节，同上，如图所示：Protocol size:4 第7、8个字节（2byte）：值为0001，1表示请求，2表示应答，3表示RARP请求、4表示RARP应答，上面两个抓包结果该字段是不一样的，分别是：Opcode:request(1)、Opcode:reply(2)。 第9到14个字节（6byte）：表示发送者的Mac地址，两图字段值不一样。 第15到18个字节（4byte）：表示发送者的Ip地址，两图字段值不一样。 第19到24个字节（6byte）：表示接收者的Mac地址，两图字段值不一样，对于请求包，因为就是要知道对方的MAC地址，所以请求包的该字段为0值。 第25到28个字节（4byte）：表示接收者的Ip地址，两图字段值不一样。  需要注意的是：请求包是广播，而应答包是单播。
3、ARP分组封装头部结构
上面分析了ARP头部的结构，下图表示了ARP分组封装的结构，它是在ARP头部前再加了以太网首部字段信息： 详细的字段分析，就不再赘述，可以参考上面的抓包图。
5、ARP缓存表以及ARP相关命令 ARP高速缓存表的作用： 为了减少网络上的通信量，主机 A 在发送其 ARP 请求分组时，就将自己的 IP 地址到硬件地址的映射写入 ARP 请求分组。当主机 B 收到 A 的 ARP 请求分组时，就将主机 A 的这一地址映射写入主机 B 自己的 ARP 高速缓存中。这对主机 B 以后向 A 发送数据报时就更方便了。</description>
    </item>
    
    <item>
      <title>TCP/IP协议族详解（二）</title>
      <link>http://shuimu98.gitHub.io/2018-03-22/tcp/ip%E5%8D%8F%E8%AE%AE%E6%97%8F%E8%AF%A6%E8%A7%A3%E4%BA%8C/</link>
      <pubDate>Thu, 22 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>http://shuimu98.gitHub.io/2018-03-22/tcp/ip%E5%8D%8F%E8%AE%AE%E6%97%8F%E8%AF%A6%E8%A7%A3%E4%BA%8C/</guid>
      <description>本系列文章是教程：TCP、IP协议族详解的学习笔记。
该系列大概分为下面几个部分：
 1、TCP/IP协议4层结构以及每层的作用 2、IP协议详解 3、ARP协议和RARP协议详解 4、ICMP协议详解 5、TCP协议详解 6、UDP协议详解  本文主要介绍TCP/IP网络体系中网络层的IP协议。
1、IP协议的功能 IP协议属于网络层众多协议中，最核心的一个协议。它的主要功能有三个：
 寻址和路由 传递服务，有两个特点：不可靠（可靠性由上层协议提供，例如TCP协议）；无连接 数据报分段（Segment）和重组  什么是寻址和路由？
举一个生活中的例子：假如我要坐火车从广州到北京，选择的路线有很多种，可以坐京广线、也可以先到南昌，然后再去上海，最后去北京等等。怎么选择路线就类似IP协议的寻址和路由。
为什么传递数据不可靠？
IP协议一个重要的原则就是：尽最大可能传递数据，但是数据能不能真的到达目的地，IP协议并没有保证。
数据报分段和重组
同样一个生活中的例子：如果要运送一个很大的机器，一次性无法运送完，通常的做法是，拆分后把零部件运送到目的地，当所有的零部件都到达目的地后，最后在目的地进行重新组装。
2、IP协议头部格式 IP协议头部格式可以分为两个部分：固定部分（20byte）和可变部分（最大可以为40byte）。所以，IP协议的头部最大是60个字节，但是一般情况下都没有可变部分。
下图为IP协议头部格式： 下面，我结合wireshark抓包工具，介绍下IP协议头部固定部分的每个字段的详细意义：
1、使用wireshark抓一个http包，访问的是: http://www.qq.com，结果如下图所示 可以看到后面的二进制数据，这就是IP协议报文的首部，一共20个字节，其中没有可选部分。 2、详细解释每个字段的意义
 第1个字节：值为45(16进制，以下同理)，高四位用来表示IP协议的版本，这里也就是：0100 .... = Version 4,低四位用来表示头部长度（注意：单位是4byte），在这里为5(0101)，也就是：.... 0101 = Header Lenght: 20 bytes（5），即4(byte)*5=20(byte)
 第2个字节：值为00，也就是图中的：Differentiated Services Field:0x00，用来获得更好的服务，这个字段以前一直没有被人们使用，这个字段不作详细的解释，只需要知道DTRC，这几个标志只能同时存在一个。但是目前这个字段的使用有些变化，具体也不做详解。
 第3、4个字节(2byte)： 值为04 0e，也就是十进制1038，也就是图中的：Total Length: 1038，表示数据的总长度（IP头部+数据长度，单位为字节），同时，我们可以根据这个数值以及前面的头部长度，计算得出数据包的长度为：1038-20 = 1018byte。另外，也可以知道数据报的最大长度为 65535 字节。
 第5、6个字节：值4c9b，图中为:Identification: 0x4c9b(19611)，它是一个计数器，用来产生数据报的标识，它相当于是给IP报文的一个身份证。比如上面运送大型机器的例子，我们在每个运送零部件上贴一个标识，表示它是属于某个机器的（比如说是挖掘机），等所有的零部件都到了后，我们可以根据这个标示，就知道这一批零件是挖掘机的。
 第7、8个字节：值为4000，这里的16个比特要特殊分配下，高三位为标示字段(图中为：Flags:0x02 （Don&#39;t Fragment）)，低13位为片偏移（图中为：Fragment offset:0）。
 目前标示字段(Flags)只有后两个比特有意义。标志字段的最低位是 MF (More Fragment)。MF=1 表示后面“还有分片”。MF = 0 表示最后一个分片。标志字段中间的一位是 DF (Don&amp;rsquo;t Fragment) 。只有当 DF = 0 时才允许分片，DF=1表示不允许分片。这里的值为:010(二进制)，也就是没有分片，因为数据只有1038byte，一个IP报文就能运送完毕，所以，它不需要分片。 较长的分组在分片后某片在原分组中的相对位置。片偏移以 8个字节 为偏移单位。关于片偏移，下面会有一张图，会更加详细的描述其意义。这里值为00 0000，因为这里没有分片，所以它的片偏移也就是0。  第9个字节：值为40，也就是10进制的64，它表示TTL（Time to Live），图中为：Time to Live:64，也就是这个IP报文在网络中存在的时间，现在用“跳”作为TTL的单位，也就是说数据报每经过一个路由器，其TTL值就减一。为什么需要TTL？它主要是为了处理路由环路。</description>
    </item>
    
    <item>
      <title>TCP/IP协议族详解（四）</title>
      <link>http://shuimu98.gitHub.io/2018-03-22/tcp/ip%E5%8D%8F%E8%AE%AE%E6%97%8F%E8%AF%A6%E8%A7%A3%E5%9B%9B/</link>
      <pubDate>Thu, 22 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>http://shuimu98.gitHub.io/2018-03-22/tcp/ip%E5%8D%8F%E8%AE%AE%E6%97%8F%E8%AF%A6%E8%A7%A3%E5%9B%9B/</guid>
      <description>本系列文章是教程：TCP、IP协议族详解的学习笔记。
该系列大概分为下面几个部分：
 1、TCP/IP协议4层结构以及每层的作用 2、IP协议详解 3、ARP协议和RARP协议详解 4、ICMP协议详解 5、TCP协议详解 6、UDP协议详解  本文主要介绍TCP/IP网络体系中网络层的ICMP协议。
1、IP协议的缺点  无差错报告和差错纠正机制 缺少一种为主机和管理查询的机制  例如：当IP数据报在网络中超过了它的TTL，那么路由器就会将这个数据报丢弃，但是没有对这个丢弃操作返回错误报告。
为了弥补IP协议的这些缺点，所以就产生了ICMP协议。需要注意的是：ICMP没有纠正错误的机制。
2、ICMP协议的数据封装格式 它的大概封装格式如下： ICMP本身是网络层协议。但是，它的报文不是如设想的那样直接传送给数据链路层，实际上，ICMP报文首先封装成IP数据报，然后再传送给下一层。在IP数据报中的协议字段值是1就表示其IP数据是ICMP报文。通过抓包可以证实这一点。
1、通过ping www.baidu.com命令，使计算机产生ICMP报文；
2、通过wireshark抓包，筛选ICMP协议，此时抓包的结果如下图所示：
3、ICMP报文种类 差错报告报文 可以理解成是错误信息error，它总是把差错报告返回给原始的数据源。常用的错误类型有：
 类型3：终点不可达，例如：无法到达目的地，可能是硬件错误、软件设置错误等等原因导致 类型4：源点抑制，例如：发送方发送速率太快，但是某个路由器接受速率过慢，那么这个路由器就会返回一个ICMP，通知发送方速率要慢一点 类型5：路由重定向，例如：当路由器发现数据报走的不是最佳路由，就会返回一个ICMP报告，让发送方下次不要走这里了 类型11：超时，例如：发生了路由环路，从而导致TTL变为0值 类型12：参数问题，例如：数据报的首部被篡改或者丢失  我们使用tracert www.baidu.com这个命令，然后抓一些ICMP包，如下图，可以看到很多黑色的结果，即差错报告。 差错报文的要点：
 对于携带ICMP差错报文的数据报，不再产生ICMP差错报文 对于分片的数据报，如果不是第一个分片，则不产生ICMP差错报文 对于具有多播地址（224.0.0.0-239.255.255.255）的数据报，不产生ICMP差错报文 对于具有特殊地址如（127.0.0.0或0.0.0.0）的数据报，不产生ICMP 差错报文  查询报文 常用的类型有：
 类型8或者0：返回请求或回到，例如常用的ping命令 类型13或14：时间戳请求或回答，注意：需要两方的时间必须与标准时间同步 类型17或18：地址码（掩码）请求或回答，不太常用（过时） 类型10或9：路由器查询通告  4、ICMP头部格式 ICMP两种报文种类有着不同的头部格式，但区别不大，前4个字节是一样的，不同的只有后面4个字节。
查询报文头部格式 ICMP查询报文头部格式如下，主要包括两个部分：8byte+32byte的数据。格式如下图： 通过抓包证实一下：
1、运行ping www.baidu.com，开始抓包
2、筛选ICMP协议包，结果如下： 3、字段解释：
 第1个字节：值为08，表示这是一个查询报文 第2个字节：值为00 第3、4个字节：值为0x4d14，表示头部校验和 第5、6个字节：值为0x0001，注意：这里要分大端和小端格式，一般windows和linux都是小端，所以，这里应该看：Identifier(LE):256(0x0100) 第7、8个字节：值为0x4700，同上，也需要分大小端。 后面的32个字节为测试数据  差错报告报文头部格式 ICMP差错报文头部格式如下（通用格式），这里需要注意的一点是，差错报告报文的格式除了前4个字节，后面的字节所对应的意义是根据type值和code值发生变化的。</description>
    </item>
    
  </channel>
</rss>