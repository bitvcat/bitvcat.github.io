<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>环境搭建 on Domi●Cat</title>
    <link>http://shuimu98.gitHub.io/tags/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</link>
    <description>Recent content in 环境搭建 on Domi●Cat</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 10 Jul 2018 14:21:00 +0800</lastBuildDate>
    
	<atom:link href="http://shuimu98.gitHub.io/tags/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>svn服务器搭建、迁移、备份、容灾</title>
      <link>http://shuimu98.gitHub.io/2018-07-10/svn%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E8%BF%81%E7%A7%BB%E5%A4%87%E4%BB%BD%E5%AE%B9%E7%81%BE/</link>
      <pubDate>Tue, 10 Jul 2018 14:21:00 +0800</pubDate>
      
      <guid>http://shuimu98.gitHub.io/2018-07-10/svn%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E8%BF%81%E7%A7%BB%E5%A4%87%E4%BB%BD%E5%AE%B9%E7%81%BE/</guid>
      <description>svn服务搭建  安装subversion：yum -y install subversion 创建版本库目录：mkdir /var/svn/repos 创建一个仓库：svnadmin create proj-test。此时，在版本库目录下（/var/svn/repos），产生一个仓库目录proj-test 创建用户密码：在生成的仓库目录下，会有一个conf文件夹，里面有三个文件：
 svnserve.conf，版本仓库的配置文件 passwd，用户账号和密码（明文） authz，仓库权限管理  编辑passwd文件，在[user]节点下，添加用户和密码。
 版本仓库配置：编辑svnserve.conf， 在节点[general]下，取消一下字段的注释：
anon-access = none #进制匿名用户访问 auth-access = write #认证用户具有写权限 password-db = passwd #密码文件 authz-db = authz #权限文件 realm = proj-test #认证域，可以随意填写，但是多个仓库如果认证域相同，使用的密码库也必须相同  注意，可能出现一个问题，*svn在show log 时候出现 want to go offline*，Subversion 有个小 bug ，当 anon-access=read 并且某个目录有被设置上 * = 标记，则会出现上述问题。
 权限管理：编辑authz文件，权限管理支持分组、单个用户、通配符。权限分为读&amp;reg;、写(w)、无访问权限(空)。
 分组，在节点[groups]下面添加分组，例如：
# 一个用户可以同时存在于不同的组中 [groups] harry_and_sally = harry,sally harry_sally_and_joe = harry,sally,&amp;amp;joe  版本权限（举例说明）</description>
    </item>
    
    <item>
      <title>在linux下搭建ftp服务</title>
      <link>http://shuimu98.gitHub.io/2018-07-10/%E5%9C%A8linux%E4%B8%8B%E6%90%AD%E5%BB%BAftp%E6%9C%8D%E5%8A%A1/</link>
      <pubDate>Tue, 10 Jul 2018 14:21:00 +0800</pubDate>
      
      <guid>http://shuimu98.gitHub.io/2018-07-10/%E5%9C%A8linux%E4%B8%8B%E6%90%AD%E5%BB%BAftp%E6%9C%8D%E5%8A%A1/</guid>
      <description>1、需求 公司要一个ftp服务器，用来存储一些常用软件以及公司内部的一些资料，因此至少需要两个用户，一个是需要密码登陆的私有账户，其他的匿名用户。 因为，匿名用户静止上传，所以为了上传文件，又额外加了一个public的虚拟用户，用来上传文件，但是这个public是不能访问私有用户的用户目录的。
 一般情况下，ftp最好不要提供匿名用户上传的权限，当然非要匿名上传也是可以的，网上有教程，这里我还是倾向于建立一个公用的虚拟用户来实现上传。
 例如： - 私有账户kgogame，密码：123，这是个虚拟用户，它的主目录为：/var/ftp/guest - 公共账户public，密码：123，也是一个虚拟用户，它的主目录：/var/ftp/pub，可以匿名访问
2、搭建FTP服务器 2-1、vsftpd支持三类用户  匿名用户，也就是不需要输入密码就可登录ftp服务器的用户，这个用户名通常是ftp或anonymous; 与匿名用户有关的设置多以 anon_选项开头。 本地用户，也就是你Linux系统上可登录到系统的用户，这些用户是在系统上实实在在存在的用户。通常会有自己的home，shell等。与本地用户有关的设置多以local_开头或包含local_的选项。 虚拟用户，只对ftp有效的用户。这些用户不可以登录Linux系统，只可以登录ftp服务器。其实就是一个本地用户映射成多个只对ftp服务器有效的虚拟用户。虚拟用户可以有自己的ftp配置文件，因此通常利用虚拟用户来对ftp系统的不同用户制定不同的权限，以达到安全控制的目的。与虚拟用户有关的设置以guest_开头。  如果你只是想用ftp实现对自己的共享，你可以开启本地用户； 如果你想对很多人共享，那你可以用匿名用户； 如果你需要针对不同的用户群给予不同的权限，那你就要设置更复杂的虚拟用户了。
2-2、安装vsftpd 我的linux版本：centos 6.9 64位
运行命令：yum install vsftpd 然后，测试是否正常：sudo service vsftpd start， 如果服务能启动，尝试登陆ftp，此时应该是可以匿名登陆的。
2-3、创建vsftpd服务的宿主用户 在安装完vsftpd后，会创建一个名为ftp的系统用户，可以通过cat /etc/passwd查看。例如:
ftp:x:14:50:FTP User:/var/ftp/pub:/sbin/nologin
/sbin/nologin表示这个用户是不能用来登陆的，该用户仅用来支持Vsftpd服务用，因此没有许可他登陆系统的必要，并设定他为不能登陆系统的用户。
注意：默认的主目录是/var/ftp，因为我的需求，所以，我把这个账户的主目录改成了/var/ftp/pub，使用命令usermod -d /var/ftp/pub ftp。
2-3、创建虚拟用户的宿主用户 为了和默认ftp系统用户区分开，我这里额外创建了一个系统用户，用来支持私有ftp账户。
mkdir /var/ftp/guest mkdir /var/ftp/guest/kgogame sudo useradd guest -d /var/ftp/guest -s /bin/nologin sudo chown guest:guest -R /var/ftp/guest/  2-4、核心配置 vsftpd的配置：/etc/vsftpd/vsftpd.conf。
 备份默认配置：cp vsftpd.conf vsftpd.</description>
    </item>
    
    <item>
      <title>在win10的linux子系统下搭建开发环境</title>
      <link>http://shuimu98.gitHub.io/2018-06-06/%E5%9C%A8win10%E7%9A%84linux%E5%AD%90%E7%B3%BB%E7%BB%9F%E4%B8%8B%E6%90%AD%E5%BB%BA%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Wed, 06 Jun 2018 19:16:00 +0800</pubDate>
      
      <guid>http://shuimu98.gitHub.io/2018-06-06/%E5%9C%A8win10%E7%9A%84linux%E5%AD%90%E7%B3%BB%E7%BB%9F%E4%B8%8B%E6%90%AD%E5%BB%BA%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</guid>
      <description>故事的起因 在很久很久之前（也就三五年前- - ），我所有的跨平台开发的套路都是：在windows系统系统搞一个虚拟机，然后装个linux系统，再接着就是各种yum、make&amp;hellip;，永无止境。最后就是windows和linux之间文件共享的搞法了，最初我用的是linux mount windows系统下的共享文件夹，在很长一段时间内都用得挺满意，但是渐渐的问题就出现了，在linux下面make的时候，经常会出现cannot allocate memory，我猜想是linux在快速创建文件时，无法及时在windows共享文件夹下生成文件。
为了解决上面的问题，我尝试采用samba服务，把linux下面的文件映射到windows系统下，但是这种方式也有缺点：
 一是samba服务的安装比较繁琐，不管是linux还是windows 二是windows下访问文件有时候速度会比较卡顿，经常导致sublime无法及时打开文件而卡顿  linux子系统 在我尝试使用NFS来共享linux文件夹时，我搜到了一些关于windows 的linux系统相关的教程，所以，我也打算尝试使用一下这个win10的新特性。
1、开启开发者模式 我的win10版本：win 10 家庭中文版，版本1803，系统版本：17134.81，算是最新的版本了。
开启步骤：设置 &amp;ndash;&amp;gt; 更新和安全 &amp;ndash;&amp;gt; 开发者选项 &amp;ndash;&amp;gt; 选择开发者模式，然后重启系统。
2、安装linux 子系统 提醒：在这之前，先改变一下应用的安装路径，因为在应用商城安装的应用，默认是放在c盘下的C:\Users\YourName\AppData\Local\Packages，这样会占用很多C盘空间，所以，要先更改下应用的安装位置。 ~~设置 &amp;ndash;&amp;gt; 搜索【存储】 &amp;ndash;&amp;gt; 点击【更改新内容的保存位置】 &amp;ndash;&amp;gt; 修改【新的应用将保存到：】，然后选择一个盘后应用。~ 会弹出一个提示框，点击确定就可以了。 linux子系统必须安装到系统盘，所以上面的方法只能对普通应用有效。
下面就要开始安装linux子系统了：
首先，打开powershell，输入bash，或者按win+q快捷键后搜索bash
然后，按照提示，在浏览器输入网址https://aka.ms/wslstore，会打开应用商城，然后选择一个linux系统安装，这里我选择我比较熟悉的ubuntu。
下载安装成功后，启动ubuntu，第一次启动时，需要等待几分钟，ubuntu系统初始化需要一些时间。接着会提示你输入一个账号名，并给你的用户名一个密码（注意：这里不是输入windows系统的账号和密码，是要给你的ubuntu子系统创建一个账号，另外需要注意的是，这个子系统的root密码在每次启动时随机生成的，所以一般我们用sudo就可以了，尽量不用root账号。）
安装好的子系统路径如图所示： 好了，到这里为止，linux子系统就已经安装完成了。安装的ubuntu版本如下：
# 内核版本 domi@Domicat:~$ uname -a Linux Domicat 4.4.0-17134-Microsoft #81-Microsoft Sun May 20 01:14:00 PST 2018 x86_64 x86_64 x86_64 GNU/Linux # ubuntu版本 domi@Domicat:~$ cat /etc/issue Ubuntu 16.</description>
    </item>
    
    <item>
      <title>我的工作环境分享</title>
      <link>http://shuimu98.gitHub.io/2016-08-27/%E6%88%91%E7%9A%84%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83%E5%88%86%E4%BA%AB/</link>
      <pubDate>Sat, 27 Aug 2016 15:08:00 +0800</pubDate>
      
      <guid>http://shuimu98.gitHub.io/2016-08-27/%E6%88%91%E7%9A%84%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83%E5%88%86%E4%BA%AB/</guid>
      <description>古语有云：工欲善其事必先利其器。一个程序员必须要有一套属于自己的、熟悉的工作环境。这里做起事来也会提高很多效率。 本文将分享我自己这么多年用得比较顺手的工作环境。
1、编辑器&amp;amp;IDE sublime text 3 编辑器首推 sublime text 3，而且我也差不多用了3年的时间，期间也有收集了很多很好用的插件、主题等。
 插件      插件 备注     SideBarEnhancements 侧边栏增强插件   BracketHighlighter 匹配高亮插件（我使用默认的下划线显示，不刺眼）   ConvertToUTF8 中文必备插件   IMESupport 中文输入法鼠标跟随，在st3中如果使用中文输入法（搜狗、微软中文）等，输入法的框没办法跟随鼠标光标，特别是双屏的时候，特别不方便。   TortoiseSVN 小乌龟svn，设置快捷键后，update、commit、log、diff简直不能太舒心   HexViewer 16进制显示，有时候会用到   SublimeLinter-lua lua语法检查（其他语言也有对应的SublimeLinter）   Terminal 右键打开cmd，默认是打开powershell，太难看，更改配置可以打开git bash   SublimeTextTrans sublime text 3透明，仅限windows，可能更适合前端同学1   Theme - Nil 这个主题简单时尚，也找过一些其他的，但是还是这个用着最舒服   GoSublime golang 插件，有少许不足(第三方包不能转到定义)    {: rules=&amp;ldquo;all&amp;rdquo;}</description>
    </item>
    
    <item>
      <title>ubuntu elasticsearch和graylog安装与使用</title>
      <link>http://shuimu98.gitHub.io/2015-09-23/ubuntu-elasticsearch%E5%92%8Cgraylog%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 23 Sep 2015 11:25:00 +0800</pubDate>
      
      <guid>http://shuimu98.gitHub.io/2015-09-23/ubuntu-elasticsearch%E5%92%8Cgraylog%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</guid>
      <description>本文记录了如何在 ubuntu server 14.04下安装和使用elasticsearch-1.7、graylog-1.2。
1、起因 从游戏服务器转到app服务器，发现好多东西需要学习，在给项目添加logger的时候，用到了golang的一个开源日志库logrus（注意：这个版本是国人fork的版本，添加了文件日志和graylog日志支持），考虑到app后端会有大量日志的产生，将日志写到文件中，可能会出问题，所有就看了下graylog是个什么东西，初步了解，发现比较强大，虽然我比较讨厌java，但是没办法，项目需要。so~ 开始动手搞起来。
2、前期准备 从百度找了一堆的教程，都是很老以前的版本，最新的1.2界面更清新，于是，只能去官网找帮助文档。
安装graylog之前，需要安装java环境、mongodb和 elasticsearch。
2-1 安装java 这里参考了http://www.linuxidc.com/Linux/2014-09/106445.htm
 检查Java是否已经安装在Ubuntu上  打开终端，使用下面的命令：java -version
如果你看到像下面的输出，这就意味着你并没有安装过Java:
The program ‘java’ can be found in the following packages: *default-jre * gcj-4.6-jre-headless * openjdk-6-jre-headless * gcj-4.5-jre-headless * openjdk-7-jre-headless Try: sudo apt-get install   在Ubuntu和Linux Mint上安装Java  看了各种类型‘Java’的不同之后，让我们看如何安装他们。
在Ubuntu和Linux Mint上安装JRE，打开终端，使用下面的命令安装JRE：sudo apt-get install default-jre
在Ubuntu和Linux Mint上安装OpenJDK，在终端，使用下面的命令安装OpenJDK Java开发工具包：sudo apt-get install default-jdk
特殊地，如果你想要安装Java 7或者Java 6等等，你可以使用openjdk-7-jdk/openjdk-6jdk，但是记住在此之前安装openjdk-7-jre/openjdk-6-jre。
2-2 安装mongodb 因为之前已经安装了mongdb，就不在记录，个人感觉mongodb官方的帮助非常清新，一路下来，完全没错误。给个地址http://docs.mongodb.org/manual/tutorial/install-mongodb-on-ubuntu/
2-3 安装elasticsearch 重点部分</description>
    </item>
    
    <item>
      <title>ubuntu下supervisor安装与使用笔记</title>
      <link>http://shuimu98.gitHub.io/2015-09-18/ubuntu%E4%B8%8Bsupervisor%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Fri, 18 Sep 2015 09:10:00 +0800</pubDate>
      
      <guid>http://shuimu98.gitHub.io/2015-09-18/ubuntu%E4%B8%8Bsupervisor%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</guid>
      <description>1、supervisor 介绍 它是个什么东东？用来干嘛的？
supervisor是linux下的进程管理工具，python编写。用来监控进程的运行。比如说你要一直运行进程A，使用supervisor后，如果A进程崩掉了， 或者意外被kill了，supervisor可以快速帮你重新启动A，当然还有其他功能。待我后面一一挖掘。
2、supervisor 安装 安装环境：
 ubuntu 14.04
python 2.7.6
 这里我选择在线安装，可以参考官网的文档， 使用Setuptools在线安装。需要先安装Setuptools，这里，我尝试了两种方式安装：
（1）、手动下载 ez_setup.py,下载地址,然后使用命令：
root@st-B85M-DS3H:~/tools# python ez_setup.py  如果安装成功，会显示：
Installed /usr/local/lib/python2.7/dist-packages/setuptools-18.2-py2.7.egg Processing dependencies for setuptools==18.2 Finished processing dependencies for setuptools==18.2  （2）、ubuntu下，直接使用apt-get安装
root@st-B85M-DS3H:~/Projects# sudo apt-get install python-setuptools  如果安装成功，最后会显示：
Unpacking python-setuptools (3.3-1ubuntu2) ... Setting up python-pkg-resources (3.3-1ubuntu2) ... Setting up python-setuptools (3.3-1ubuntu2) ...  输入命令：
root@st-B85M-DS3H:~/Projects# easy_install --help  检查是否安装成功。
安装好setuptools之后，使用命令easy_install supervisor ,开始安装supervisor。
当然，也可以下载源码，解压后，使用命令 python setup.</description>
    </item>
    
    <item>
      <title>ubuntu下nginx安装与使用笔记</title>
      <link>http://shuimu98.gitHub.io/2015-09-17/ubuntu%E4%B8%8Bnginx%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Thu, 17 Sep 2015 15:37:00 +0800</pubDate>
      
      <guid>http://shuimu98.gitHub.io/2015-09-17/ubuntu%E4%B8%8Bnginx%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</guid>
      <description>最近转过来开发app，一番折腾+研究，发现真的是隔行如隔山，好多东西都不能按照游戏服务器开发的思路来。
这一篇主要记录关于ngnix在ubuntu下搭建nginx环境以及过程中遇到的问题，暂时只是简单了解一部分皮毛，如果以后遇到更深入的知识，会持续更新。
1、nginx 的安装 安装环境：ubuntu Release: 14.04
小知识：
如何查看ubuntu版本号？ 1、cat /etc/issue 2、lsb_release -a (此方法显示内容更详细)  安装方法百度很多，这里我只实践了在线安装部分，也推荐在线安装。
1-1 在线安装，推荐 $sudo apt-get install nginx
ubuntu安装Nginx之后的文件结构大致为：
所有的配置文件都在 /etc/nginx 下，并且每个虚拟主机已经安排在了/etc/nginx/sites-available下
启动程序文件在 /usr/sbin/nginx
日志放在了 /var/log/nginx 中，分别是access.log和error.log
并已经在 /etc/init.d/ 下创建了启动脚本nginx
默认的虚拟主机的目录设置在了/usr/share/nginx/www
1-2 源代码安装 下载地址：http://nginx.org/download/
安装过程很简单，如下：
$./configure $make $make install  安装成功之后，nginx放置在/usr/local/nginx目录下，主要的配置文件为conf目录下的nginx.conf，nginx的启动文件在sbin目录下的nginx文件。
2、nginx 启动 注意：nginx 默认监听80端口，如果无法启动，请查看80端口是否被占用，请检查是否安装了apache，或者修改ngnix的配置文件，将ngnix的监听端口改为8080。有关nginx配置会在下面详细说明。
小知识：
查看端口占用情况： netstat -nltp|grep 80 t表示tcp协议;l表示仅列出有在 Listen (监听) 的服務状态 或者 netstat -anp|grep 80  2-1 在线安装的启动过程 $sudo /etc/init.d/nginx start
2-2 源代码安装的启动过程 命令如下：</description>
    </item>
    
    <item>
      <title>cocos2dx3.3发布apk</title>
      <link>http://shuimu98.gitHub.io/2015-03-23/cocos2dx3.3%E5%8F%91%E5%B8%83apk/</link>
      <pubDate>Mon, 23 Mar 2015 20:24:00 +0000</pubDate>
      
      <guid>http://shuimu98.gitHub.io/2015-03-23/cocos2dx3.3%E5%8F%91%E5%B8%83apk/</guid>
      <description>如何编译安装的apk，有很多种方法，一种是使用第三方编译器，例如：eclipse等，一种是纯命令行的方式。 因为对eclipse不熟悉，加上我比较喜欢命令行的工作方式，所以我采用的是纯命令行来编译发布apk。不管是用 第三方工具还是命令行，我们都需要有一个安卓的环境。下面开始一步一步进行。
 提醒：系统为win8.1 x64，文中所给出的下载地址，可能需要自备翻墙工具，原因你懂的。 (●—●)
 安卓环境安装 下载 SDK
安卓环境搭建需要4个东西，它们分别是：java JDK、android SDK、android NDK 和 apache ant。
1)、下载java JDK
关于java JDK 版本的选择，android开发可以选择 Java SE
2)、下载android SDK
注意：这里有两个选项，我选择 Stand-alone SDK Tools，只单独下载sdk，不需要用下载 android studio。
3)、下载android NDK
根据自己的系统下载相应的版本。
4)、下载apache ant
截止本文时间，最新的版本是 *Apache Ant 1.9.4*。
安装
这里是我的操作步骤，我把所有的需要的东西都放在 E:\Android 文件夹中，方便管理，当然你也可以随便放。
除了java jdk需要安装，其他三个都是解压就可以用了。java jdk的详细安装我就不说那么多了，只需要记录 jdk 和 jre的路径，防止 自己装完后，记不住路径了 - -！
配置环境变量
安装完java jdk后，需要配置环境变量。
1)、java jdk 环境变量
A、新建系统变量 JAVA_HOME 变量，值为：E:\Android\Java\jdk1.8.0_40 ；
B、新建系统变量 classpath 变量，变量值为： .;%JAVA_HOME%\lib;%JAVA_HOME%\lib\tools.jar （注意前面的“.</description>
    </item>
    
  </channel>
</rss>